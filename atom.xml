<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>efinedxq</title>
  
  <subtitle>渐行渐远</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://efinedxq.github.io/"/>
  <updated>2018-01-19T02:19:00.869Z</updated>
  <id>https://efinedxq.github.io/</id>
  
  <author>
    <name>efinedxq</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LeetCode_problem_4_Median_of_Two_Sorted_Arrays</title>
    <link href="https://efinedxq.github.io/%E9%A2%98%E8%A7%A3/LeetCode/LeetCode-problem-4-Median-of-Two-Sorted-Arrays/"/>
    <id>https://efinedxq.github.io/题解/LeetCode/LeetCode-problem-4-Median-of-Two-Sorted-Arrays/</id>
    <published>2018-01-19T02:15:10.000Z</published>
    <updated>2018-01-19T02:19:00.869Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>There are two sorted arrays nums1 and nums2 of size m and n respectively.</p><p>Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).</p><blockquote><p>找中间数字。</p></blockquote><hr><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>Example 1:<br>nums1 = [1, 3]<br>nums2 = [2]<br>The median is 2.0</p><p>Example 2:<br>nums1 = [1, 2]<br>nums2 = [3, 4]<br>The median is (2 + 3)/2 = 2.5</p><hr><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><ol><li>合并两个数组，然后找到中间值。这是最笨的方法。</li><li>题目没有要求输出合并后的数组，所以没必要全部比较，可以记录比较的长度，只要达到中间长度就停止。</li><li>进一步优化，不用辅助数组，试探性查找。</li></ol><hr><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">/** </span></span><br><span class="line"><span class="comment">* 将两者不完全合并，即只要合并到len长度即可。</span></span><br><span class="line"><span class="comment">* 用了一个辅助vector。 68ms</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">   <span class="function"><span class="keyword">double</span> <span class="title">findMedianSortedArrays</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums1, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums2)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">int</span> len1 = nums1.size(), len2=nums2.size();</span><br><span class="line"><span class="keyword">int</span> len = (len1+len2)/<span class="number">2</span>, f = (len1+len2)%<span class="number">2</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; tem;</span><br><span class="line"><span class="keyword">double</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>, j= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(i&lt;len1&amp;&amp;j&lt;len2&amp;&amp;i+j&lt;len+<span class="number">1</span>)&#123;</span><br><span class="line">   <span class="keyword">if</span>(nums1[i]&gt;nums2[j])&#123;</span><br><span class="line">      tem.push_back(nums2[j]);</span><br><span class="line">  j++;</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  tem.push_back(nums1[i]);</span><br><span class="line">  i++;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">" "</span>&lt;&lt;j&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(i+j&lt;len+<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(i&lt;len1)&#123;</span><br><span class="line">  tem.push_back(nums1[i]);</span><br><span class="line">  i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(j&lt;len2)&#123;</span><br><span class="line">   tem.push_back(nums2[j]);</span><br><span class="line">  j++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">" "</span>&lt;&lt;j&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">       <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">" "</span>&lt;&lt;j&lt;&lt;<span class="string">" "</span>&lt;&lt;len&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">if</span>(f&gt;<span class="number">0</span>)&#123;</span><br><span class="line">ans = tem[len];</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">ans = <span class="keyword">double</span>(tem[len<span class="number">-1</span>]+tem[len])/<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><figcaption><span>不用vector</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">* 不用vector 思路一样  但用了更长的时间  90ms</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">findMedianSortedArrays</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums1, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums2)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">int</span> len1 = nums1.size(), len2=nums2.size();</span><br><span class="line"><span class="keyword">int</span> len = (len1+len2)/<span class="number">2</span>, f = (len1+len2)%<span class="number">2</span>;</span><br><span class="line"><span class="keyword">double</span> ans = <span class="number">0</span>, tem = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>, j= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(i&lt;len1&amp;&amp;j&lt;len2&amp;&amp;i+j&lt;len+<span class="number">1</span>)&#123;</span><br><span class="line">   <span class="keyword">if</span>(nums1[i]&gt;nums2[j])&#123;</span><br><span class="line">      <span class="keyword">if</span>(i+j==len<span class="number">-1</span>)&#123;</span><br><span class="line">  tem = nums2[j];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(i+j==len)&#123;</span><br><span class="line">  ans = nums2[j];</span><br><span class="line">  &#125;</span><br><span class="line">  j++;</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(i+j==len<span class="number">-1</span>)&#123;</span><br><span class="line">  tem = nums1[i];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(i+j==len)&#123;</span><br><span class="line">  ans = nums1[i];</span><br><span class="line">  &#125;</span><br><span class="line">  i++;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">" "</span>&lt;&lt;j&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(i+j&lt;len+<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(i&lt;len1)&#123;</span><br><span class="line">  <span class="keyword">if</span>(i+j==len<span class="number">-1</span>)&#123;</span><br><span class="line">  tem = nums1[i];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(i+j==len)&#123;</span><br><span class="line">  ans = nums1[i];</span><br><span class="line">  &#125;</span><br><span class="line">  i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(j&lt;len2)&#123;</span><br><span class="line">  <span class="keyword">if</span>(i+j==len<span class="number">-1</span>)&#123;</span><br><span class="line">  tem = nums2[j];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(i+j==len)&#123;</span><br><span class="line">  ans = nums2[j];</span><br><span class="line">  &#125;</span><br><span class="line">  j++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">" "</span>&lt;&lt;j&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">       <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">" "</span>&lt;&lt;j&lt;&lt;<span class="string">" "</span>&lt;&lt;len&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">if</span>(f&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> (ans+tem)/<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><figcaption><span>进一步优化</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">*  例程，55ms</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"> <span class="function"><span class="keyword">double</span> <span class="title">findMedianSortedArrays</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums1, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums2)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">int</span> len1 = nums1.size(), len2=nums2.size();</span><br><span class="line">    <span class="keyword">if</span>(len1&gt;len2)&#123;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; tem = nums1; nums1 = nums2; nums2=tem;</span><br><span class="line"><span class="keyword">int</span> t = len1; len1 = len2; len2 = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> iMin = <span class="number">0</span>, iMax = len1, half = (len1+len2+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">while</span>(iMin &lt;= iMax)&#123;</span><br><span class="line">   <span class="keyword">int</span> i = (iMin + iMax)/<span class="number">2</span>;</span><br><span class="line">   <span class="keyword">int</span> j = half - i;</span><br><span class="line">    <span class="keyword">if</span> (i &lt; iMax &amp;&amp; nums2[j<span class="number">-1</span>] &gt; nums1[i])&#123;</span><br><span class="line">               iMin = iMin + <span class="number">1</span>; <span class="comment">// i is too small</span></span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span> <span class="keyword">if</span> (i &gt; iMin &amp;&amp; nums1[i<span class="number">-1</span>] &gt; nums2[j]) &#123;</span><br><span class="line">               iMax = iMax - <span class="number">1</span>; <span class="comment">// i is too big</span></span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span> &#123; <span class="comment">// i is perfect</span></span><br><span class="line">               <span class="keyword">int</span> maxLeft = <span class="number">0</span>;</span><br><span class="line">               <span class="keyword">if</span> (i == <span class="number">0</span>) &#123; maxLeft =nums2[j<span class="number">-1</span>]; &#125;</span><br><span class="line">               <span class="keyword">else</span> <span class="keyword">if</span> (j == <span class="number">0</span>) &#123; maxLeft = nums1[i<span class="number">-1</span>]; &#125;</span><br><span class="line">               <span class="keyword">else</span> &#123; maxLeft = max(nums1[i<span class="number">-1</span>], nums2[j<span class="number">-1</span>]); &#125;</span><br><span class="line">               <span class="keyword">if</span> ( (len1 + len2) % <span class="number">2</span> == <span class="number">1</span> ) &#123; <span class="keyword">return</span> maxLeft; &#125;</span><br><span class="line"></span><br><span class="line">               <span class="keyword">int</span> minRight = <span class="number">0</span>;</span><br><span class="line">               <span class="keyword">if</span> (i == len1) &#123; minRight = nums2[j]; &#125;</span><br><span class="line">               <span class="keyword">else</span> <span class="keyword">if</span> (j == len2) &#123; minRight = nums1[i]; &#125;</span><br><span class="line">               <span class="keyword">else</span> &#123; minRight = min(nums2[j], nums1[i]); &#125;</span><br><span class="line"></span><br><span class="line">               <span class="keyword">return</span> (maxLeft + minRight) / <span class="number">2.0</span>;</span><br><span class="line">           &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0.0</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;p&gt;There are two sorted arrays nums1 and nums2 of size m and n re
      
    
    </summary>
    
      <category term="题解" scheme="https://efinedxq.github.io/categories/%E9%A2%98%E8%A7%A3/"/>
    
      <category term="LeetCode" scheme="https://efinedxq.github.io/categories/%E9%A2%98%E8%A7%A3/LeetCode/"/>
    
    
      <category term="leetcode" scheme="https://efinedxq.github.io/tags/leetcode/"/>
    
      <category term="数组" scheme="https://efinedxq.github.io/tags/%E6%95%B0%E7%BB%84/"/>
    
      <category term="中间数" scheme="https://efinedxq.github.io/tags/%E4%B8%AD%E9%97%B4%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode_problem_3_Longest_Substring_Without_Repeating_Characters</title>
    <link href="https://efinedxq.github.io/%E9%A2%98%E8%A7%A3/LeetCode/LeetCode-problem-3-Longest-Substring-Without-Repeating-Characters/"/>
    <id>https://efinedxq.github.io/题解/LeetCode/LeetCode-problem-3-Longest-Substring-Without-Repeating-Characters/</id>
    <published>2018-01-19T02:11:23.000Z</published>
    <updated>2018-01-19T02:18:44.271Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>   Given a string, find the length of the longest substring without repeating characters.<br>      （找出最长的没有重复字母出现的子串。输出其最长长度。）</p><hr><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>   Given “abcabcbb”, the answer is “abc”, which the length is 3.</p><p>  Given “bbbbb”, the answer is “b”, with the length of 1.</p><p>  Given “pwwkew”, the answer is “wke”, with the length of 3. Note that the answer must be a substring, “pwke” is a subsequence and not a substring.</p><hr><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><ol><li>有一个结论只要重复出现，index之前的东西就失去了作用，只用记录index之后的字符。</li><li>如果不是重复字符， index==-1 ,那么就让max++;</li><li>如果不是重复字符，index!=-1，就比较记录max。不能直接max++，也不能直接max=i-index; 例如：abcaad</li><li>如果出现重复，并且是在index之后出现，给记录，再比较max</li><li>如果出现重复，在index之前出现，比较记录max</li></ol><hr><h3 id="测试用例"><a href="#测试用例" class="headerlink" title="测试用例"></a>测试用例</h3><pre><code>&quot;abcabcss&quot;  4&quot;aaaaa&quot;   1&quot;qwwwejw&quot;  3&quot;abcade&quot;  5&quot;abba&quot; 2  index之前的就不算了 &quot;ohomm&quot;  3&quot;tmmzuxt&quot; 5 因为t出现过，所以return的判断还是有必要的&quot;alouzxilkaxkufsu&quot;  8</code></pre><hr><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">lengthOfLongestSubstring</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> index = <span class="number">-1</span>;  <span class="comment">//每遇到重复值，就记录下其第一次出现的下标</span></span><br><span class="line"><span class="keyword">int</span> max = <span class="number">0</span>, len = s.size();  <span class="comment">//max记录当前最长</span></span><br><span class="line"><span class="keyword">int</span> mapping[<span class="number">200</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> val;  <span class="comment">// 记录字符</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i ++)&#123;</span><br><span class="line">val = s[i];</span><br><span class="line"><span class="comment">//如果出现过，并且是在index之后出现，给记录</span></span><br><span class="line">    <span class="keyword">if</span>(mapping[val]&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(index &lt;= mapping[val]<span class="number">-1</span>)&#123;</span><br><span class="line">index = mapping[val]<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">        max = max&gt;=i-index?max:i-index;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//if(index==-1) max++;</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line"><span class="keyword">if</span>(mapping[val]&lt;=<span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(index==<span class="number">-1</span>) max++;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">max = max&gt;=i-index?max:i-index;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;index&lt;&lt;<span class="string">" "</span>&lt;&lt;max&lt;&lt;<span class="string">" "</span>&lt;&lt;val&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    mapping[val] = i+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(index == <span class="number">-1</span>) <span class="keyword">return</span> max;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> max&gt;=len-index<span class="number">-1</span>?max:len-index<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><figcaption><span>改进版</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">   </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lengthOfLongestSubstring</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">int</span> index = <span class="number">0</span>;  <span class="comment">//每遇到重复值，就记录下其第一次出现的下标</span></span><br><span class="line"><span class="keyword">int</span> max = <span class="number">0</span>, len = s.size();  <span class="comment">//max记录当前最长</span></span><br><span class="line"><span class="keyword">int</span> mapping[<span class="number">200</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> val;  <span class="comment">// 记录字符</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i ++)&#123;</span><br><span class="line">val = s[i];</span><br><span class="line">    index = mapping[val]&gt;index?mapping[val]:index;</span><br><span class="line">max = max&gt;i-index+<span class="number">1</span>?max:i-index+<span class="number">1</span>;</span><br><span class="line">mapping[val] = i+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> max;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><hr><h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><pre><code>ASCII码&apos;a&apos; 97     &apos;A&apos;  65   &apos;0&apos; 48&apos;z&apos; 122    &apos;Z&apos;  90   &apos;9&apos; 57</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;p&gt;   Given a string, find the length of the longest substring wi
      
    
    </summary>
    
      <category term="题解" scheme="https://efinedxq.github.io/categories/%E9%A2%98%E8%A7%A3/"/>
    
      <category term="LeetCode" scheme="https://efinedxq.github.io/categories/%E9%A2%98%E8%A7%A3/LeetCode/"/>
    
    
      <category term="leetcode" scheme="https://efinedxq.github.io/tags/leetcode/"/>
    
      <category term="字符串" scheme="https://efinedxq.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="最长子串" scheme="https://efinedxq.github.io/tags/%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode_problem_2_Add_Two_Numbers</title>
    <link href="https://efinedxq.github.io/%E9%A2%98%E8%A7%A3/LeetCode/LeetCode-problem-2-Add-Two-Numbers/"/>
    <id>https://efinedxq.github.io/题解/LeetCode/LeetCode-problem-2-Add-Two-Numbers/</id>
    <published>2018-01-19T02:08:37.000Z</published>
    <updated>2018-01-19T02:09:41.102Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.</p><p>You may assume the two numbers do not contain any leading zero, except the number 0 itself.</p><blockquote><p>假定两个数都不是0开头，除了数本身就是0。</p></blockquote><hr><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>Input: (2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)<br>Output: 7 -&gt; 0 -&gt; 8<br>Explanation: 342 + 465 = 807.</p><hr><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>题目没什么难点，就是链表的顺序遍历问题。注意进位就行了，可能最后有一个进位要再创建一个节点，不要漏掉。</p><hr><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  C++ 代码</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode *next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">addTwoNumbers</span><span class="params">(ListNode* l1, ListNode* l2)</span> </span>&#123;</span><br><span class="line">        <span class="function">ListNode <span class="title">head</span><span class="params">(<span class="number">-1</span>)</span></span>;</span><br><span class="line"><span class="keyword">int</span> f = <span class="number">0</span>; <span class="comment">//标识进位</span></span><br><span class="line">ListNode* pre = &amp;head;</span><br><span class="line">ListNode* pa = l1, *pb = l2;</span><br><span class="line"><span class="keyword">int</span> val = <span class="number">0</span>, a, b;</span><br><span class="line"><span class="keyword">while</span>(pa!=<span class="literal">nullptr</span>||pb!=<span class="literal">nullptr</span>)&#123;</span><br><span class="line">           </span><br><span class="line">   a = pa == <span class="literal">nullptr</span>?<span class="number">0</span>:pa-&gt;val;</span><br><span class="line">   b = pb == <span class="literal">nullptr</span>?<span class="number">0</span>:pb-&gt;val;</span><br><span class="line">   val = a + b + f;</span><br><span class="line">   f = val / <span class="number">10</span>;</span><br><span class="line">   val = val % <span class="number">10</span>;</span><br><span class="line">   </span><br><span class="line">   pre-&gt;next = <span class="keyword">new</span> ListNode(val);</span><br><span class="line">   </span><br><span class="line">           pa=pa==<span class="literal">nullptr</span>?<span class="literal">nullptr</span>:pa-&gt;next;</span><br><span class="line">           pb=pb==<span class="literal">nullptr</span>?<span class="literal">nullptr</span>:pb-&gt;next;</span><br><span class="line">           pre = pre-&gt;next;   </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//最后判断是否有进位</span></span><br><span class="line"><span class="keyword">if</span>(f&gt;<span class="number">0</span>)&#123;</span><br><span class="line">  pre-&gt;next = <span class="keyword">new</span> ListNode(f);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> head.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;p&gt;You are given two non-empty linked lists representing two non-
      
    
    </summary>
    
      <category term="题解" scheme="https://efinedxq.github.io/categories/%E9%A2%98%E8%A7%A3/"/>
    
      <category term="LeetCode" scheme="https://efinedxq.github.io/categories/%E9%A2%98%E8%A7%A3/LeetCode/"/>
    
    
      <category term="leetcode" scheme="https://efinedxq.github.io/tags/leetcode/"/>
    
      <category term="数组" scheme="https://efinedxq.github.io/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode_problem_1_two_sum</title>
    <link href="https://efinedxq.github.io/%E9%A2%98%E8%A7%A3/LeetCode/LeetCode-problem-1-two-sum/"/>
    <id>https://efinedxq.github.io/题解/LeetCode/LeetCode-problem-1-two-sum/</id>
    <published>2018-01-19T01:40:09.000Z</published>
    <updated>2018-01-19T02:12:59.302Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><blockquote><p>Given an array of integers, return indices of the two numbers such<br>that they add up to a specific target.</p><p>You may assume that each input would have exactly one solution, and<br>you may not use the same element twice.</p></blockquote><hr><h3 id="Example"><a href="#Example" class="headerlink" title="Example:"></a>Example:</h3><blockquote><p> Given nums = [2, 7, 11, 15], target = 9,<br>Because nums[0] + nums[1] = 2 + 7 = 9,<br> return [0, 1].</p></blockquote><hr><h3 id="测试用例"><a href="#测试用例" class="headerlink" title="测试用例"></a>测试用例</h3><blockquote><p> 输入：3,3    6<br>输出：  0,1</p><p> 输入：2,3,3    5<br> 输出： 0,1<br> 下面代码没有通过这个测试，但是A了。题目说结果是确定的，应该就是不考虑这种情况。</p></blockquote><hr><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><ol><li>先排序，最快O(nlogn)。再左右夹逼。比较暴力。</li><li>利用hash表，时间复杂度为O(n)。下面代码是基于第二种方法。 </li></ol><hr><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; twoSum(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target) &#123;</span><br><span class="line">       <span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; hashMap;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;nums.size(); i ++) hashMap[nums[i]] = i;</span><br><span class="line"></span><br><span class="line"><span class="comment">//cout&lt;&lt;hashMap.size()&lt;&lt;endl;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;nums.size(); i ++)&#123;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> gap = target - nums[i];</span><br><span class="line"><span class="keyword">if</span>(hashMap[gap] &gt; <span class="number">0</span>)&#123;</span><br><span class="line">ans.push_back(i);</span><br><span class="line">ans.push_back(hashMap[gap]);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><figcaption><span>官方java答案</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] twoSum(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target) &#123;</span><br><span class="line">   Map&lt;Integer, Integer&gt; <span class="built_in">map</span> = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">       <span class="keyword">int</span> complement = target - nums[i];</span><br><span class="line">       <span class="keyword">if</span> (<span class="built_in">map</span>.containsKey(complement)) &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[] &#123; <span class="built_in">map</span>.get(complement), i &#125;;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="built_in">map</span>.put(nums[i], i);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"No two sum solution"</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Given an array of int
      
    
    </summary>
    
      <category term="题解" scheme="https://efinedxq.github.io/categories/%E9%A2%98%E8%A7%A3/"/>
    
      <category term="LeetCode" scheme="https://efinedxq.github.io/categories/%E9%A2%98%E8%A7%A3/LeetCode/"/>
    
    
      <category term="leetcode" scheme="https://efinedxq.github.io/tags/leetcode/"/>
    
      <category term="链表" scheme="https://efinedxq.github.io/tags/%E9%93%BE%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客添加图片、音乐、视频</title>
    <link href="https://efinedxq.github.io/hello/%E4%BD%A0%E5%A5%BD%EF%BC%8CHexo/"/>
    <id>https://efinedxq.github.io/hello/你好，Hexo/</id>
    <published>2018-01-18T04:38:23.000Z</published>
    <updated>2018-01-19T01:33:15.240Z</updated>
    
    <content type="html"><![CDATA[<p>　1.　插入外部链接图片</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![“图片描述”](“图片地址”)</span><br></pre></td></tr></table></figure><p>　2. 添加本地图片</p><blockquote><p>在\hexo\source目录下新建文件夹，命名为images或者其他你喜欢的名字，然后编辑你的md博文，插入下面的代码样式：<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![“图片描述”](/images/你的图片名字.JPG)</span><br></pre></td></tr></table></figure></p></blockquote><p>　3. 插入音乐</p><blockquote><p>比如网易云音乐，找到喜欢的歌曲，点击分享按钮，把里面的代码复制下来，直接粘贴到博文中即可</p></blockquote> <iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="https://music.163.com/outchain/player?type=2&id=25706282&auto=0&height=66"><br> </iframe>  <p>　4. 插入视频</p><blockquote><p>Idina Menze和Caleb Hyles激情对唱Let It Go：</p></blockquote><iframe height="498" width="510" src="https://player.youku.com/embed/XNjcyMDU4Njg0" frameborder="0" allowfullscreen><br></iframe>  ]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;　1.　插入外部链接图片&lt;/p&gt;
 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=
      
    
    </summary>
    
      <category term="hello" scheme="https://efinedxq.github.io/categories/hello/"/>
    
    
      <category term="hello" scheme="https://efinedxq.github.io/tags/hello/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://efinedxq.github.io/%E6%B5%8B%E8%AF%95/hello/java/hello-world/"/>
    <id>https://efinedxq.github.io/测试/hello/java/hello-world/</id>
    <published>2018-01-17T10:33:55.000Z</published>
    <updated>2018-01-19T05:28:01.530Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
      <category term="测试" scheme="https://efinedxq.github.io/categories/%E6%B5%8B%E8%AF%95/"/>
    
      <category term="hello" scheme="https://efinedxq.github.io/categories/%E6%B5%8B%E8%AF%95/hello/"/>
    
      <category term="java" scheme="https://efinedxq.github.io/categories/%E6%B5%8B%E8%AF%95/hello/java/"/>
    
    
      <category term="测试" scheme="https://efinedxq.github.io/tags/%E6%B5%8B%E8%AF%95/"/>
    
      <category term="test" scheme="https://efinedxq.github.io/tags/test/"/>
    
  </entry>
  
</feed>
